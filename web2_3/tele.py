import telebot
import os
from telebot import types
TOKEN = "7241355746:AAFe0f6AwuMz5OIZS4vFAiVAY4w_Tir9f6E"

COMMENTS_FILE = "comments.txt"

ADMIN_LIST = ["bkd42nd"]

bot = telebot.TeleBot(TOKEN)

def read_comments():
    with open(COMMENTS_FILE, "r", encoding="utf-8") as file:
        return file.readlines()

def write_comment(user, comment):
    with open(COMMENTS_FILE, "a", encoding="utf-8") as file:
        file.write(f"{user}: {comment}\n")

def write_all_comments(comments):
    with open(COMMENTS_FILE, "w", encoding="utf-8") as file:
        file.writelines(comments)

@bot.message_handler(commands=["start"])
def send_welcome(message):
    markup = types.InlineKeyboardMarkup()
    
    add_comment_button = types.InlineKeyboardButton("‚úç –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", callback_data="add_comment")
    
    my_comments_button = types.InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å —Å–≤–æ–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏", callback_data="delete_my_comments")
    
    list_comments_button = types.InlineKeyboardButton("üìÑ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤", callback_data="list_comments")

    markup.add(add_comment_button)
    markup.add(my_comments_button)
    markup.add(list_comments_button)
    
    if message.from_user.username in ADMIN_LIST:
        delete_others_button = types.InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å —á—É–∂–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏", callback_data="delete_others_menu")
        markup.add(delete_others_button)
    
    bot.reply_to(message, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_menu_handler(call):
    if call.data == "add_comment":
        add_comment(call)
    elif call.data == "delete_my_comments":
        delete_my_comments(call)
    elif call.data == "delete_others_menu":
        admin_delete_menu(call)
    elif call.data == "list_comments":
        list_comments(call.message)

def add_comment(call):
    bot.answer_callback_query(call.id)
    bot.send_message(call.message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:")

    bot.register_next_step_handler(call.message, process_add_comment)

def process_add_comment(message):
    user = message.from_user.username
    comment = message.text

    write_comment(user, comment)
    bot.send_message(message.chat.id, f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç @{user} –¥–æ–±–∞–≤–ª–µ–Ω!")

def delete_my_comments(call):
    user = call.from_user.username
    comments = read_comments()
    new_comments = [c for c in comments if not c.startswith(f"{user}:")]

    if len(new_comments) == len(comments):
        bot.answer_callback_query(call.id, "–£ –≤–∞—Å –Ω–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
    else:
        write_all_comments(new_comments)
        bot.answer_callback_query(call.id, "–í—Å–µ –≤–∞—à–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —É–¥–∞–ª–µ–Ω—ã!")


def admin_delete_menu(call):
    bot.answer_callback_query(call.id)

    markup = types.InlineKeyboardMarkup()
    cancel_button = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="cancel")
    markup.add(cancel_button)
    
    bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—å–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:")
    bot.register_next_step_handler(call.message, process_delete_user)

def process_delete_user(message):
    target_user = message.text
    admin_user = message.from_user.username

    if admin_user in ADMIN_LIST:
        comments = read_comments()
        new_comments = [c for c in comments if not c.startswith(f"{target_user}:")]

        if len(new_comments) == len(comments):
            bot.send_message(message.chat.id, f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ—Ç {target_user} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        else:
            write_all_comments(new_comments)
            bot.send_message(message.chat.id, f"–í—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ—Ç @{target_user} –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã.")
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

def list_comments(message):
    comments = read_comments()

    if not comments:
        bot.send_message(message.chat.id, "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–µ—Ç.")
    else:
        response = "–í—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:\n" + "".join(comments)
        bot.send_message(message.chat.id, response)

bot.polling()